package filtertransformations;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

/** Test class for the Sharpen class. Tests the Sharpen filter at each Row and Column. */
public class SharpenTest {

  // test for the first Sharpen values
  @Test
  public void testFirstSharpenValue() {
    Sharpen s = new Sharpen();
    boolean g =
        -.125 == s.matrix[0][0]
            && -.125 == s.matrix[0][1]
            && -.125 == s.matrix[0][2]
            && -.125 == s.matrix[0][3]
            && -.125 == s.matrix[0][4]
            && -.125 == s.matrix[1][0]
            && -.125 == s.matrix[2][0]
            && -.125 == s.matrix[3][0]
            && -.125 == s.matrix[4][0]
            && -.125 == s.matrix[1][4]
            && -.125 == s.matrix[2][4]
            && -.125 == s.matrix[3][4]
            && -.125 == s.matrix[4][4]
            && -.125 == s.matrix[4][1]
            && -.125 == s.matrix[4][2]
            && -.125 == s.matrix[4][3];
    assertEquals(true, g);
  }

  // tests for second Sharpen values
  @Test
  public void testSecondSharpenValue() {
    Sharpen s = new Sharpen();
    boolean g =
        .25 == s.matrix[1][1]
            && .25 == s.matrix[1][2]
            && .25 == s.matrix[1][3]
            && .25 == s.matrix[2][1]
            && .25 == s.matrix[3][1]
            && .25 == s.matrix[3][2]
            && .25 == s.matrix[3][3]
            && .25 == s.matrix[2][3];
    assertEquals(true, g);
  }

  // tests for the third Sharpen values
  @Test
  public void testThirdSharpenValue() {
    Sharpen s = new Sharpen();
    assertEquals(true, 1 == s.matrix[2][2]);
  }
}
